#include <stdio.h>
#include <stdlib.h>
#include <alsa/asoundlib.h>

#define PCM_DEVICE "default"

int main() {
    int err;
    snd_pcm_t *capture_handle;
    snd_pcm_hw_params_t *hw_params;
    unsigned int sample_rate = 44100;
    unsigned int channels = 2;
    unsigned int buffer_size = 1024;
    char *buffer;

    err = snd_pcm_open(&capture_handle, PCM_DEVICE, SND_PCM_STREAM_CAPTURE, 0);
    if (err < 0) {
        printf("Unable to open PCM device: %s\n", snd_strerror(err));
        exit(1);
    }

    snd_pcm_hw_params_alloca(&hw_params);
    snd_pcm_hw_params_any(capture_handle, hw_params);
    snd_pcm_hw_params_set_access(capture_handle, hw_params, SND_PCM_ACCESS_RW_INTERLEAVED);
    snd_pcm_hw_params_set_format(capture_handle, hw_params, SND_PCM_FORMAT_S16_LE);
    snd_pcm_hw_params_set_channels(capture_handle, hw_params, channels);
    snd_pcm_hw_params_set_rate_near(capture_handle, hw_params, &sample_rate, 0);
    snd_pcm_hw_params_set_period_size_near(capture_handle, hw_params, &buffer_size, 0);

    err = snd_pcm_hw_params(capture_handle, hw_params);
    if (err < 0) {
        printf("Unable to set HW parameters: %s\n", snd_strerror(err));
        exit(1);
    }

    buffer = malloc(buffer_size * channels * 2);
    if (buffer == NULL) {
        printf("Unable to allocate buffer\n");
        exit(1);
    }

    while (1) {
        err = snd_pcm_readi(capture_handle, buffer, buffer_size);
        if (err < 0) {
            printf("Error reading PCM device: %s\n", snd_strerror(err));
            exit(1);
        }
        printf("Read %d frames\n", err);
    }

    snd_pcm_close(capture_handle);
    free(buffer);

    return 0;
}
